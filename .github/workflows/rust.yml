name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build prompting-client snap
        id: snapcraft-client
        uses: snapcore/action-build@v1

      - name: Build testing snap
        id: snapcraft-testing
        uses: snapcore/action-build@v1
        with:
          path: testing-snap

      - name: Setup snapd and snaps
        run: |
          sudo snap refresh snapd --channel=latest/edge
          sudo snap set system experimental.user-daemons=true
          sudo snap install --dangerous ${{ steps.snapcraft-client.outputs.snap }}
          sudo snap install --dangerous ${{ steps.snapcraft-testing.outputs.snap }}
          sudo snap connect prompting-client:snap-interfaces-requests-control
          sudo snap connect aa-prompting-test:camera
          sudo snap set system experimental.apparmor-prompting=true

      - name: Install dependencies
        run: |
          sudo apt-get install protobuf-compiler linux-modules-extra-$(uname -r) v4l-utils

      - name: Setup virtual devices
        run: |
          sudo modprobe v4l2loopback devices=1 video_nr=0 card_label="Dummy Camera" exclusive_caps=1
          sudo adduser $USER video && newgrp video
          sudo chmod 666 /dev/video0
          v4l2-ctl --list-devices

      - name: Check generated files are up to date
        working-directory: ./prompting-client
        run: |
          cargo clean
          cargo build

          # Compare generated files with committed files
          if ! diff -r ./src/protos ./src/protos; then
            echo "Protobuf files are not up-to-date. Please regenerate and commit them."
            exit 1
          fi
          echo "Protobuf files are up-to-date."

      - name: Run tests
        working-directory: ./prompting-client
        run: |
          cargo test
          cargo test --test mock_server --features dry-run
